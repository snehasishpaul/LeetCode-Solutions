class Solution {
    public ListNode removeElements(ListNode head, int val) {
        while(head != null && head.val == val) {
            head = head.next;
        }
        
        ListNode curr = head;
        
        while(curr != null && curr.next != null) {
            if(curr.next.val == val) {
                curr.next = curr.next.next;
            } else {
                curr = curr.next;
            }
        }
        
        return head;       
      
        
    }
}


OR:

class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if(head == null) {
            return head;
        }
        
        ListNode curr = head;
        ListNode prev = null;
        
        iterating the array
        
        while(curr != null) {
            if(curr.val == val) {
                if(prev == null) {
                    if first element is VAL
                    curr = curr.next;
                    head = curr;
                } else {
                    prev.next = curr.next;
                    curr = curr.next;
                }
            } else {
                prev = curr;
                curr = curr.next;
            }
        }
        
        return head;       
        
    }
}